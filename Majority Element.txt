Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2

/*code*/
import java.util.*;
class Solution {
    public int majorityElement(int[] nums) {
        if (nums.length == 0)//array is empty
           return 0;
        if (nums.length == 1)
           return nums[0];
        int majority = nums[0];
        Map<Integer, Integer> map = new HashMap<>();
        for (int i : nums) {
            if (!map.containsKey(i))
                map.put(i, 1);
            else
                map.put(i, map.get(i) + 1);
        }
        for (int i : map.keySet()) {
            if(map.get(i) > nums.length/2)
               majority = i;
        }
        return majority;
    }
}