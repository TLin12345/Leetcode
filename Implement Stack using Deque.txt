import java.util.Deque;
import java.util.LinkedList;
public class Main {
    public static class MyStack{
        Deque<Integer> deque;
        public MyStack() {
            deque = new LinkedList<>();
        }
        public void push(int val) {
            deque.addLast(val);//deque.offer(x) or deque.add() or deque.offerLast(x)
        }
        public int pop() {
            int top = deque.getLast();//deque.peekLast()
            deque.removeLast();//deque.pollLast()
            return top;
        }
        public int peek() {
            return deque.peekLast();//deque.getLast()
        }
        public boolean isEmpty() {
            return deque.size() == 0;
        }

    }
    /* Testing */
    public static void main(String[] args) {
        MyStack stack = new MyStack();
        int[] num = {1, 2, 3, 4, 5, 6};
        for (int i : num) {
            stack.push(i);
        }
        while (!stack.isEmpty()) {
            int val = stack.pop();
            System.out.println(val);//6, 5, 4, 3, 2, 1
        }
    }
}